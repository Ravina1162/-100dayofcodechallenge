QUESTION : Remove Digit From Number to Maximize 
You are given a string number representing a positive integer and a character digit.

Return the resulting string after removing exactly one occurrence of digit from number such that the value of the resulting string in decimal form is maximized. The test cases are generated such that digit occurs at least once in number.

ANSWER :
class Solution {
    public String removeDigit(String number, char digit) {
        List<String> nums = new ArrayList<>();
        for (int i = 0; i < number.length(); i++) {
            if (number.charAt(i) == digit) 
                nums.add(number.substring(0, i) + number.substring(i + 1));
        }
        Collections.sort(nums);
        return nums.get(nums.size()-1);
    }
}
INPUT FORMAT :
Input: number = "1231", digit = "1"
Output: "231"

Example 1:
Input: number = "123", digit = "3"
Output: "12"
Explanation: There is only one '3' in "123". After removing '3', the result is "12".

Constraints:

2 <= number.length <= 100
number consists of digits from '1' to '9'.
digit is a digit from '1' to '9'.
digit occurs at least once in number.
