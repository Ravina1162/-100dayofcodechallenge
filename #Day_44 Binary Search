QUESTION : Binary Search
Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.

You must write an algorithm with O(log n) runtime complexity.

 ANSWER :
 class Solution {
    public int search(int[] n, int t) {
        int s=0,e=n.length-1;
        while(s<=e)
        {
            int v=(s+e)/2;
            if(t==n[v])
            return v;
            if(t>n[v])
            s=v+1;
            else
            e=v-1;
        }
        if(n.length==1&&t==n[0])
        return 0;
        return -1;
    }
}

INPUT FORMAT:

Input: nums = [-1,0,3,5,9,12], target = 9
Output: 4
Explanation: 9 exists in nums and its index is 4

Example 1:

Input: nums = [-1,0,3,5,9,12], target = 2
Output: -1
Explanation: 2 does not exist in nums so return -1
 

Constraints:

1 <= nums.length <= 104
-104 < nums[i], target < 104
All the integers in nums are unique.
nums is sorted in ascending order.
