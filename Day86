QUESTION : Binary Tree Inorder Traversal
Given the root of a binary tree, return the inorder traversal of its nodes' values.

ANSWER :
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
         List<Integer> res = new ArrayList<>();
         inorder(res,root);
         return res;
    }
    List<Integer> inorder(List res,TreeNode root)
    {
        if(root!=null)
        {
            inorder(res,root.left);
            res.add(root.val);
            inorder(res,root.right);
        }
        return res;
    }
}

EXAMPLE 1:

Input: root = [1,null,2,3]
Output: [1,3,2]

Constraints:

The number of nodes in the tree is in the range [0, 100].
-100 <= Node.val <= 100

